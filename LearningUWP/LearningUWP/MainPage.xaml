<Page
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:LearningUWP"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Models="using:LearningUWP.Models"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity" xmlns:Behaviors="using:LearningUWP.Behaviors"
    x:Class="LearningUWP.MainPage"
    mc:Ignorable="d" RequestedTheme="Dark" Background="#FFCCCCCC" NavigationCacheMode="Enabled">
    <Page.Resources>
        <DataTemplate x:Key="CompanyTemplate">
            <Grid Height="60" Margin="10" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="1" Margin="10,0,0,0">
                    <TextBlock Text="{Binding Name}" Style="{StaticResource TitleTextBlockStyle}"/>
                    <TextBlock Text="{Binding Location}" Style="{StaticResource CaptionTextBlockStyle}" TextWrapping="NoWrap" FontSize="14.667"/>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="EmployeeTemple">
            <Grid Margin="10,15">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding Name}" Margin="0,0,-2,0"/>
                <StackPanel Grid.Row="1" Orientation="Horizontal">
                    <TextBlock x:Name="textBlock1" TextWrapping="Wrap" Text="Age:" Height="20" Margin="0,0,-0.6,0"/>
                    <TextBlock Text="{Binding Age}" Height="20" Margin="10,0,0,0"/>
                </StackPanel>
                <StackPanel Grid.Row="2" Orientation="Horizontal">
                    <TextBlock x:Name="textBlock2" TextWrapping="Wrap" Text="Position:" Height="20" Margin="0,0,0.4,0"/>
                    <TextBlock Text="{Binding Position}" Height="20" Margin="10,0,0,0"/>
                    <Button x:Name="button" Content="Detail" Margin="10,0,0,0" Click="DetailBt_Click"/>
                </StackPanel>
            </Grid>
        </DataTemplate>
    </Page.Resources>
    <Page.BottomAppBar>
        <CommandBar RenderTransformOrigin="0.5,0.5" x:Name="commandBar" >
            <CommandBar.RenderTransform>
                <CompositeTransform/>
            </CommandBar.RenderTransform>
            <CommandBar.SecondaryCommands>
                <AppBarToggleButton x:Name="LiveTileToggleBt" Label="Live Tile" IsChecked="{Binding LiveTileEnabled, Mode=TwoWay}"/>
            </CommandBar.SecondaryCommands>
            <AppBarButton x:Name="aboutPageBt" HorizontalAlignment="Stretch" Icon="Admin" Label="Go to About" VerticalAlignment="Stretch" d:LayoutOverrides="Height" Click="aboutPageBt_Click"/>
            <AppBarButton Icon="Mail" Label="Send email to company" Command="{Binding SendEmailCommand, Mode=OneWay}" />
        </CommandBar>
    </Page.BottomAppBar>
    <Page.DataContext>
        <Models:MainPageModel/>
    </Page.DataContext>

    <Grid Name="__MainGrid" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="LoadingState">
                <VisualState x:Name="Loading">
                    <VisualState.Setters>
                        <Setter Target="grid.(FrameworkElement.HorizontalAlignment)" Value="Stretch"/>
                        <Setter Target="grid.(FrameworkElement.VerticalAlignment)" Value="Stretch"/>
                        <Setter Target="grid.(FrameworkElement.Width)" Value="NaN"/>
                        <Setter Target="grid.(FrameworkElement.Height)" Value="NaN"/>
                        <Setter Target="grid.(Panel.Background)">
                            <Setter.Value>
                                <SolidColorBrush Color="#CCFFFFFF"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="grid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="stackPanel.(FrameworkElement.HorizontalAlignment)" Value="Center"/>
                        <Setter Target="stackPanel.(FrameworkElement.VerticalAlignment)" Value="Center"/>
                        <Setter Target="textBlock.(TextBlock.Text)" Value="Loading"/>
                        <Setter Target="textBlock.(TextBlock.FontSize)" Value="48"/>
                        <Setter Target="stackPanel.(FrameworkElement.Width)" Value="NaN"/>
                        <Setter Target="stackPanel.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="textBlock.(FrameworkElement.HorizontalAlignment)" Value="Stretch"/>
                        <Setter Target="textBlock.(FrameworkElement.VerticalAlignment)" Value="Stretch"/>
                        <Setter Target="stackPanel.(FrameworkElement.Height)" Value="NaN"/>
                        <Setter Target="progressBar.(ProgressBar.IsIndeterminate)" Value="True"/>
                        <Setter Target="progressBar.(RangeBase.Value)" Value="0"/>
                        <Setter Target="progressBar.(Control.HorizontalContentAlignment)" Value="Stretch"/>
                        <Setter Target="progressBar.(FrameworkElement.VerticalAlignment)" Value="Stretch"/>
                        <Setter Target="progressBar.(FrameworkElement.HorizontalAlignment)" Value="Stretch"/>
                        <Setter Target="progressBar.(FrameworkElement.Width)" Value="NaN"/>
                        <Setter Target="progressBar.(FrameworkElement.Height)" Value="10"/>
                        <Setter Target="progressBar.(RangeBase.Maximum)" Value="100"/>
                        <Setter Target="progressBar.(RangeBase.Minimum)" Value="0"/>
                        <Setter Target="commandBar.(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Value="48"/>
                    </VisualState.Setters>
                    <Storyboard>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="stackPanel" d:IsOptimized="True"/>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="progressBar" d:IsOptimized="True"/>
                        <ColorAnimation Duration="0" To="#FF080808" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="progressBar" d:IsOptimized="True"/>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Loaded">
                    <VisualState.Setters>
                        <Setter Target="grid.(FrameworkElement.HorizontalAlignment)" Value="Stretch"/>
                        <Setter Target="grid.(FrameworkElement.VerticalAlignment)" Value="Stretch"/>
                        <Setter Target="grid.(FrameworkElement.Width)" Value="NaN"/>
                        <Setter Target="grid.(FrameworkElement.Height)" Value="NaN"/>
                        <Setter Target="grid.(Panel.Background)">
                            <Setter.Value>
                                <SolidColorBrush Color="#CCFFFFFF"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="grid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="stackPanel.(FrameworkElement.HorizontalAlignment)" Value="Center"/>
                        <Setter Target="stackPanel.(FrameworkElement.VerticalAlignment)" Value="Center"/>
                        <Setter Target="textBlock.(TextBlock.Text)" Value="Loading"/>
                        <Setter Target="textBlock.(TextBlock.FontSize)" Value="48"/>
                        <Setter Target="stackPanel.(FrameworkElement.Width)" Value="NaN"/>
                        <Setter Target="stackPanel.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="textBlock.(FrameworkElement.HorizontalAlignment)" Value="Stretch"/>
                        <Setter Target="textBlock.(FrameworkElement.VerticalAlignment)" Value="Stretch"/>
                        <Setter Target="stackPanel.(FrameworkElement.Height)" Value="NaN"/>
                        <Setter Target="progressBar.(ProgressBar.IsIndeterminate)" Value="False"/>
                        <Setter Target="progressBar.(RangeBase.Value)" Value="0"/>
                        <Setter Target="progressBar.(Control.HorizontalContentAlignment)" Value="Stretch"/>
                        <Setter Target="progressBar.(FrameworkElement.VerticalAlignment)" Value="Stretch"/>
                        <Setter Target="progressBar.(FrameworkElement.HorizontalAlignment)" Value="Stretch"/>
                        <Setter Target="progressBar.(FrameworkElement.Width)" Value="NaN"/>
                        <Setter Target="progressBar.(FrameworkElement.Height)" Value="10"/>
                        <Setter Target="progressBar.(RangeBase.Maximum)" Value="100"/>
                        <Setter Target="progressBar.(RangeBase.Minimum)" Value="0"/>
                    </VisualState.Setters>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="stackPanel" d:IsOptimized="True"/>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="progressBar" d:IsOptimized="True"/>
                        <ColorAnimation Duration="0" To="#FF080808" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="progressBar" d:IsOptimized="True"/>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="commandBar">
                            <EasingDoubleKeyFrame KeyTime="0" Value="48"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="textBlock">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <BackEase EasingMode="EaseIn" Amplitude="0.2"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="-2000">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <BackEase EasingMode="EaseIn" Amplitude="0.2"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.8">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Error">
                    <VisualState.Setters>
                        <Setter Target="grid.(FrameworkElement.HorizontalAlignment)" Value="Stretch"/>
                        <Setter Target="grid.(FrameworkElement.VerticalAlignment)" Value="Stretch"/>
                        <Setter Target="grid.(FrameworkElement.Width)" Value="NaN"/>
                        <Setter Target="grid.(FrameworkElement.Height)" Value="NaN"/>
                        <Setter Target="grid.(Panel.Background)">
                            <Setter.Value>
                                <SolidColorBrush Color="#CCFFFFFF"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="grid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="stackPanel.(FrameworkElement.HorizontalAlignment)" Value="Center"/>
                        <Setter Target="stackPanel.(FrameworkElement.VerticalAlignment)" Value="Center"/>
                        <Setter Target="textBlock.(TextBlock.Text)" Value="Can't load data"/>
                        <Setter Target="textBlock.(TextBlock.FontSize)" Value="48"/>
                        <Setter Target="stackPanel.(FrameworkElement.Width)" Value="NaN"/>
                        <Setter Target="stackPanel.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="textBlock.(FrameworkElement.HorizontalAlignment)" Value="Stretch"/>
                        <Setter Target="textBlock.(FrameworkElement.VerticalAlignment)" Value="Stretch"/>
                        <Setter Target="stackPanel.(FrameworkElement.Height)" Value="NaN"/>
                        <Setter Target="progressBar.(ProgressBar.IsIndeterminate)" Value="True"/>
                        <Setter Target="progressBar.(RangeBase.Value)" Value="0"/>
                        <Setter Target="progressBar.(Control.HorizontalContentAlignment)" Value="Stretch"/>
                        <Setter Target="progressBar.(FrameworkElement.VerticalAlignment)" Value="Stretch"/>
                        <Setter Target="progressBar.(FrameworkElement.HorizontalAlignment)" Value="Stretch"/>
                        <Setter Target="progressBar.(FrameworkElement.Width)" Value="NaN"/>
                        <Setter Target="progressBar.(FrameworkElement.Height)" Value="10"/>
                        <Setter Target="progressBar.(RangeBase.Maximum)" Value="100"/>
                        <Setter Target="progressBar.(RangeBase.Minimum)" Value="0"/>
                        <Setter Target="commandBar.(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Value="48"/>
                        <Setter Target="progressBar.(UIElement.Visibility)" Value="Collapsed"/>
                    </VisualState.Setters>
                    <Storyboard>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="stackPanel" d:IsOptimized="True"/>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="progressBar" d:IsOptimized="True"/>
                        <ColorAnimation Duration="0" To="#FF080808" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="progressBar" d:IsOptimized="True"/>
                        <ColorAnimation Duration="0" To="#FFC70000" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock" d:IsOptimized="True"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="100"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <ListView x:Name="listView" ItemTemplate="{StaticResource CompanyTemplate}" 
				ItemsSource="{Binding FilteredCompanies}" Grid.Row="1" 
				SelectedItem="{Binding SelectedCompany, Mode=TwoWay}" SelectedIndex="-1">
                <Interactivity:Interaction.Behaviors>
                    <Behaviors:AutoScrolToSelectedItem_B/>
                </Interactivity:Interaction.Behaviors>
            </ListView>
            <TextBox x:Name="textBox" TextWrapping="Wrap" Text="{Binding FilterCriteria, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PlaceholderText="Search for Company" Margin="20,32" FontSize="16"/>
        </Grid>
        <Grid Grid.Column="1" RequestedTheme="Dark">
            <Grid.RowDefinitions>
                <RowDefinition Height="60"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Padding="3,3,3,3" Margin="10,10,0,10" HorizontalAlignment="Left" d:LayoutOverrides="TopPosition, BottomPosition" 
				FontSize="24" Text="{Binding EmployeeListTitle}"/>
            <ScrollViewer Grid.Row="1">
                <ItemsControl ItemTemplate="{StaticResource EmployeeTemple}" ItemsSource="{Binding Employees}">
                    <ItemsControl.ItemContainerTransitions>
                        <TransitionCollection>
                            <EntranceThemeTransition FromVerticalOffset="0" FromHorizontalOffset="38" IsStaggeringEnabled="True"/>
                        </TransitionCollection>
                    </ItemsControl.ItemContainerTransitions>
                </ItemsControl>
            </ScrollViewer>
        </Grid>
        <Grid x:Name="grid" HorizontalAlignment="Left" Height="100" Opacity="0" VerticalAlignment="Top" Width="100">
            <StackPanel x:Name="stackPanel" HorizontalAlignment="Left" Height="100" Opacity="0" VerticalAlignment="Top" Width="100" d:LayoutOverrides="LeftPosition, RightPosition">
                <TextBlock x:Name="textBlock" Opacity="0" TextWrapping="Wrap" Text="textBlock" RenderTransformOrigin="0.5,0.5">
                    <TextBlock.RenderTransform>
                        <CompositeTransform/>
                    </TextBlock.RenderTransform>
                </TextBlock>
                <ProgressBar x:Name="progressBar" Height="10" Opacity="0" VerticalAlignment="Stretch" Width="100"/>
            </StackPanel>
        </Grid>

    </Grid>
</Page>
